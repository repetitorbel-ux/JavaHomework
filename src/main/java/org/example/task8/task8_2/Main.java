package org.example.task8.task8_2;

public class Main {
    public static void main(String[] args) {
        int k = 2;
        String str = "Каждая строка, создаваемая с помощью оператора new, литерала (заключенная в двойные апострофы) или метода класса, создающего строку, является экземпляром класса String. Особенностью объекта класса String является то, что его значение не может быть изменено после создания объекта при помощи любого метода класса. Изменение строки всегда приводит к созданию нового объекта в heap. Сама объектная ссылка при этом сохраняет прежнее значение и хранится в стеке. Произведенные изменения можно сохранить переинициализируя ссылку.";
        //String str = "Изменение на всегда приводит к "; //тестовая


        StringChange stringchange = new StringChange(); //создаем объект для вызова метода StringChange()
        String newstring = stringchange.changeString(k, str); //создаем переменную, в которую записываем результат работы метода StringChange() в class StringChange

        System.out.println("Измененная строка: " + newstring); //Вывод результата

}



    }


/*
int n = 5;
        String str = "Каждая строка, создаваемая с помощью оператора new, литерала (заключенная в двойные апострофы) или метода класса, создающего строку, является экземпляром класса String. Особенностью объекта класса String является то, что его значение не может быть изменено после создания объекта при помощи любого метода класса. Изменение строки всегда приводит к созданию нового объекта в heap. Сама объектная ссылка при этом сохраняет прежнее значение и хранится в стеке. Произведенные изменения можно сохранить переинициализируя ссылку.";
Main string = new Main(n, str);//оздание нового объекта класса Main
        //string.changeString(n, str); //вызов метода на этот экземпляр через ссылку с передачей ему агрументов
        String result = string.changeString(n, str);
        System.out.println(result);

 */

/*
2.
2.1 В тексте после символа каждого слова с индексом k вставить заданную подстроку. Используемые методы (split(), substring())
Вынести это в отдельный метод с сигнатурой public String (int k, String text)

1) split() - получаем массив отдельных слов
2) находим длину каждого элемента массива

 */